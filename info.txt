https://git-scm.com - клиент Гид который создаёт пользователь репазитой
для запуска проекта правая мышка в ппке с проектом команда GIT BASH HERE
для создания проекта пишем $ git init
смотрим скрытые елементы папки git

Для того чтобы глянуть хелп по команде пишем git help config

Создание пользователя:
1) git config --global user.name "Leo" (Leo1331Leo)
2) git config --global user.email "liony1331@ukr.net"
Вывод конфигов настроек git config --list  вывод всех

git status -выводит информацыю состояния всегда используется для проверки команд
добавлен файлы под наблюдение ГИТА командой add . точка значит добавляем все файлы проекта или же нужно писать название файла
которые ставиться под наблюдение (Без точки)

Для добавления файлов в локальный репозиторий используем команду git commet -a -m "Название точки сохранения"
где -а довабить все файлы -m коментарий

Добавления/Изменение:
1) git add . //добавляем файл регистрацию изменений
2) git commit -m "Название второй точки сохранения" //проеведения изменения

Создаем глобальный репозиторий на сайте https://github.com
заходим на сайт в https://github.com.new и создаем репозиторий

КОМАНДЫ ДОБАВЛЕНИЯ ФАЙЛОВ С ГЛОБ РЕПИОЗИТОРИЯ

1) КОМАНДА СГЕНЕРИРОВАНА НА САЙТЕ
git remote add origin https://github.com/Leo1331Leo/Leo.git
git push -u origin master

git push -- Добавляет в глобальный репозиторий

Робота со 2м пользователем
Создаем папку проекта, копируем в эту папку проект с помощъю команды:
GIT CLONE копируем  сылку с сайта (Например  https://github.com/Leo1331Leo/Leo.git )
после этого пишем cd Leo и после этого проверяем статус
Если 1 пользователь внес изменения и добавил на сервер то 2й пользователь должен зайти в папку проекта и выполнить 2 команды
git fretch - излекает данные из сервера и добавляет в локальный репазиторий 2й пользователь но они не будут видны
git pull - показывает изменения 2 польозвателя

Создание ВЕТОК:
Внимание перед созданием ветки комит проекта : GIT COMMIT -M"name"
////
git branch name-"" даем название ветки
////
git branch name- даем название ветки ИЛИ git checkout -b name- создаем ветку и переходим на нее
/////
git branch -v просмотр веток
git checkout- выбираем ветку
